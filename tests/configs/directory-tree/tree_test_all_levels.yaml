# Directory Tree Test - All Levels Distribution
# 
# Purpose: Validates I/O operations with files at EVERY directory level
#
# Configuration:
#   - Structure: 3-way tree, 3 levels deep
#   - Total directories: 3 + 9 + 27 = 39 directories
#   - Files: 50 files per directory = 1,950 total files
#   - Distribution: all (files in EVERY directory, not just leaves)
#   - Size: Uniform 1-4 KB
#   - Fill: Random data with dedup/compression
#   - Workload: GET (50%), PUT (30%), STAT (20%)
#
# Directory Structure:
#   Level 1: 3 directories   (3 * 50 = 150 files)
#   Level 2: 9 directories   (9 * 50 = 450 files)
#   Level 3: 27 directories  (27 * 50 = 1,350 files)
#   Total: 39 directories, 1,950 files
#
# Expected Results:
#   - 1,950 files created during prepare
#   - Operations distributed across all directory levels
#   - Realistic multi-level directory testing
#
# Validates:
#   - File I/O at all directory depths
#   - PathSelector handles multi-level trees
#   - File index mapping across all levels
#
# Usage:
#   ./target/release/sai3-bench run --config tests/configs/directory-tree/tree_test_all_levels.yaml

version: 1
duration: 15s
concurrency: 4
target: "file:///mnt/test/sai3bench-tree-all-levels"

prepare:
  directory_structure:
    width: 3              # 3 subdirectories at each level
    depth: 3              # 3 levels deep
    files_per_dir: 50     # 50 files per directory (at ALL levels)
    distribution: "all"   # Files in EVERY directory (not just leaves)
    dir_mask: "sai3.d%d_w%d"
  file_size:
    dist: "uniform"
    min: 1024            # 1 KB
    max: 4096            # 4 KB
  fill: "random"
  dedup_factor: 2
  compress_factor: 2
  
  ensure_objects:
    - base_uri: "file:///mnt/test/sai3bench-tree-all-levels"
      count: 0            # No flat objects, only tree files

workload:
  - op: get
    path: "/"
    weight: 50
  
  - op: put
    path: "/"
    object_size: 2048     # Fixed 2KB for simplicity
    dedup_factor: 2
    compress_factor: 2
    weight: 30
  
  - op: stat
    path: "/"
    weight: 20
